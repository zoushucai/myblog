{
  "hash": "7e7da94df760c82587c4f6bc186e0277",
  "result": {
    "markdown": "---\ntitle: dplyr -- 3合并数据\ndate: '2018-01-04'\ncategories:\n  - r\n  - dplyr\n---\n\n\n\n记录是一行,字段是一列\n\n\n## 1、转换与合并\n\nleft_join(a, b, by = \"x1\")：\t向数据集a中加入匹配的数据集b记录（行）。 \n\nright_join(a, b, by = \"x1\")：\t向数据集b中加入匹配的数据集a记录。\n\ninner_join(a, b, by = \"x1\")：\t合并数据。仅保留匹配的记录。\n\nfull_join(a, b, by = \"x1\")：\t\t合并数据。保留所有记录，所有行。没有的用NA填充\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\na=data.frame(x1=c(\"A\",\"B\",\"C\"),x2=c(1:3))\nb=data.frame(x1=c(\"A\",\"B\",\"D\"),x3=c(\"T\",\"F\",\"T\"))\nprint(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2\n1  A  1\n2  B  2\n3  C  3\n```\n:::\n\n```{.r .cell-code}\nprint(b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x3\n1  A  T\n2  B  F\n3  D  T\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(a, b, by = \"x1\")#\t向数据集a中加入匹配的数据集b记录。\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2   x3\n1  A  1    T\n2  B  2    F\n3  C  3 <NA>\n```\n:::\n\n```{.r .cell-code}\nright_join(a, b, by = \"x1\")#\t向数据集b中加入匹配的数据集a记录。\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2 x3\n1  A  1  T\n2  B  2  F\n3  D NA  T\n```\n:::\n\n```{.r .cell-code}\ninner_join(a, b, by = \"x1\")#\t合并数据。仅保留匹配的记录。\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2 x3\n1  A  1  T\n2  B  2  F\n```\n:::\n\n```{.r .cell-code}\nfull_join(a, b, by = \"x1\")# 合并数据。保留所有记录，所有行，没有的用NA填充\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  x1 x2   x3\n1  A  1    T\n2  B  2    F\n3  C  3 <NA>\n4  D NA    T\n```\n:::\n:::\n\n\n\n## 2、筛选与合并\n\nsemi_join(a, b, by = \"x1\")： \t数据集a中能与数据集b匹配的记录。\n\nanti_join(a, b, by = \"x1\")：\t数据集a中与数据集b不匹配的记录\n\n## 3、集合操作\n\nintersect(x, y)：\t均出现在数据集x和y中的记录。xy交集\n\nunion(x, y)：\t出现在数据集x或y中的记录。 xy并集\n\nsetdiff(x, y)：\t仅出现在数据集x而不在y中的记录。x与y的差集\n\n\nbind_rows(x, y)：\t把数据集y作为新的⾏行添加到x中。\n\nbind_cols(x, y)：\t把数据集y作为新的列添加到x中。\n\n  + 注意：数据按所在位置匹配。\n  + 和rbind（） 与cbind（）不一样的是，rbind（）/cbind（）对数据合并有严格的要求\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nx=data.frame(A=c(\"a\",\"b\",\"c\"),B=c(\"t\",\"u\",\"v\"),C=c(1:3))\ny=data.frame(A=c(\"a\",\"b\",\"d\"),B=c(\"t\",\"u\",\"v\"),D=c(2:4))\nprint(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  A B C\n1 a t 1\n2 b u 2\n3 c v 3\n```\n:::\n\n```{.r .cell-code}\nprint(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  A B D\n1 a t 2\n2 b u 3\n3 d v 4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(x, y) #行合并，列全部显示，没有的用NA填充 ，选择.id=\"name\"参数，多增加一列，列名name\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  A B  C  D\n1 a t  1 NA\n2 b u  2 NA\n3 c v  3 NA\n4 a t NA  2\n5 b u NA  3\n6 d v NA  4\n```\n:::\n\n```{.r .cell-code}\nbind_rows(x, y, .id=\"name\")# 为了区别数据是分别来自于两个其他数据库，可以用id进行区别\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  name A B  C  D\n1    1 a t  1 NA\n2    1 b u  2 NA\n3    1 c v  3 NA\n4    2 a t NA  2\n5    2 b u NA  3\n6    2 d v NA  4\n```\n:::\n\n```{.r .cell-code}\nbind_cols(x, y) #列合并，\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  A...1 B...2 C A...4 B...5 D\n1     a     t 1     a     t 2\n2     b     u 2     b     u 3\n3     c     v 3     d     v 4\n```\n:::\n:::\n\n\n\n## 4、数据排序\n```\narrange(.data, ..., .by_group = FALSE) :根据变量进行排序\n  + 默认升序，在变量前面添加desc()则变为降序\n  + .by_group = FALSE 默认忽视对组的升序排序,设置为TRUE则把组进行升序排序以后再按比变量进行排序\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(mtcars, cyl, desc(disp))  #根据变量进行排序\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\n```\n:::\n\n```{.r .cell-code}\nby_cyl <- mtcars %>% group_by(cyl)\n\nby_cyl %>% arrange(desc(wt), .by_group = TRUE) #默认忽视对组的升序排序,设置为TRUE则把组进行升序排序以后再按比变量进行排序\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 11\n# Groups:   cyl [3]\n     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1  24.4     4 147.     62  3.69  3.19  20       1     0     4     2\n 2  22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2\n 3  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2\n 4  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1\n 5  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1\n 6  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1\n 7  26       4 120.     91  4.43  2.14  16.7     0     1     5     2\n 8  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1\n 9  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1\n10  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2\n# … with 22 more rows\n```\n:::\n:::\n\n\n## 5、 运行环境\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 (2022-06-23)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.5.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.0.9\n\nloaded via a namespace (and not attached):\n [1] rstudioapi_0.14   knitr_1.40        magrittr_2.0.3    tidyselect_1.1.2 \n [5] R6_2.5.1          rlang_1.0.4       fastmap_1.1.0     fansi_1.0.3      \n [9] stringr_1.4.1     tools_4.2.1       xfun_0.32         utf8_1.2.2       \n[13] DBI_1.1.3         cli_3.3.0         htmltools_0.5.3   assertthat_0.2.1 \n[17] yaml_2.3.5        digest_0.6.29     tibble_3.1.8      lifecycle_1.0.1  \n[21] purrr_0.3.4       htmlwidgets_1.5.4 vctrs_0.4.1       glue_1.6.2       \n[25] evaluate_0.16     rmarkdown_2.16.1  stringi_1.7.8     compiler_4.2.1   \n[29] pillar_1.8.1      generics_0.1.3    jsonlite_1.8.0    pkgconfig_2.0.3  \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}