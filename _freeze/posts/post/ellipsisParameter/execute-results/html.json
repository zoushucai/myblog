{
  "hash": "9b70b8e38ed3987cfe3471fc18993178",
  "result": {
    "markdown": "---\ntitle: 省略号参数— 可变长参数\ndate: '2019-04-30'\ncategories: r\n---\n\n\n\n\n## 省略号参数— 可变长参数\n\n​\t\t在R中我们查看别人的函数或者内部函数，经常用到`…`这种参数，`...`也称把可变长参数，今天就来聊一聊中方法的使用。\n\n### 1.捕获省略号中的内容\n\n先看一个例子：构造一个函数然后对所有的参数进行相加求和。\n\n\n::: {.cell}\n\n```{.r .cell-code}\naddemup <- function(x, ...){\n   args <- list(...)# 推荐把省略号的内容分配给list,然后在对该list进行操作\n   for (a in args){\n   \t\t\t    x <- x + a \n   } \n   x\n }\n\naddemup(1,1)\n#> [1] 2\naddemup(1,2,3,4,5)\n#> [1] 15\n```\n:::\n\n\n我们还可以通过**`..1`,`..2`到`..9`等直接引用列表`…`中的内容。`..1`表示第一项，`..2`表示第二项，以此类推**。\n\n对list操作可以结合**purrr包中的map, reduce, accumulate**和基础函数**do.call**等 操作更方便。一个实际的例子，\n\n```\nDGM_U = function(...){\n  #######  第一部分是对参数的检查 #####################\n  # 输入的参数为U_{k}，U_{k}代表一个完整的区间乘积互反判断矩阵。\n  n = nrow(..1)\n  m = ncol(..1)\n  args <- list(...)\n  stopifnot( length(args) >=2, all( map_lgl(args,is.matrix)),2*n ==m )\n  # 检查所有的矩阵维度是否一样\n  library(purrr)\n  t = map(args,dim) %>% do.call(rbind, .) \n  stopifnot( nrow(unique(t)) == 1)\n  \n  ####### 第二部分 对参数的操作，达到想要的目的###########\n  ## 1. 使用快捷的函数\n  k = 1 / length(args)\n  UB = reduce( map(args,function(x)fenjie(x)$B),`*`)^k\n  UD = reduce( map(args, function(x)fenjie(x)$D), `*`)^k\n  \n  ## 2. 使用循环操作 -- 对比操作\n  # UB = matrix(1,nrow = n, ncol = n)\n  # UD = matrix(1,nrow = n, ncol = n)\n  # for(xx in args){\n  #   B = fenjie(xx)$B\n  #   D = fenjie(xx)$D\n  #   for(i in 1:n){\n  #     for(j in 1:n){\n  #       UB[i,j] = UB[i,j] * B[i,j]\n  #       UD[i,j] = UD[i,j] * D[i,j]\n  #     }\n  #   }\n  # }\n  # k = 1 / length(args)\n  # UB = UB^( k)\n  # UD = UD^(k)\n  return( hecheng(UB,UD))\n}\n# 由于该函数引用了部分其他函数，故这里不能运行\nDGM_U(U_t1,U_t2,U_t3)\n```\n\n\n\n### 2. 用省略号传递给图形参数\n\n我们知道R中的图形参数是有很多的，可以把它传递给图形参数。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnicePlot = function(X,Y,...){\n  xlabel = deparse(substitute(X)) # 捕获X的输入\n  ylabel = deparse(substitute(Y)) # 捕获Y的输入\n  \n  plot(X,Y,type ='o',\n      xlab = xlabel,ylab = ylabel,main = paste(xlabel,ylabel,sep = '--'),\n      ...)\n}\n\nDate = 1:7\nSales = c(100,120,150,130,160,210,120)\nnicePlot(Date,Sales,col='red')\n```\n\n::: {.cell-output-display}\n![](ellipsisParameter_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n其中**substitute()**函数捕获输入的内容(无论输入什么样的内容，则原样输出)，**deparse() **函数将其转变为字符串\n\n\n\n### 3. 将省略号与其他参数结合\n\n\n::: {.cell}\n\n```{.r .cell-code}\nv <- c(sqrt(1:100))\nf <- function(x, ...) { \n   print(x); \n   summary(...)\n  }\nf(\"Here is the summary for v.\", v, digits=2)\n#> [1] \"Here is the summary for v.\"\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>     1.0     5.1     7.1     6.7     8.7    10.0\n```\n:::\n\n\n\n\n### 4. 也可对省略号取名称\n\n实际上，参数本身的值不是通过省略号参数传递的唯一信息。也可以使用参数的名称（如果指定），例如：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- function(...) {\n  names(list(...))\n  \n   # 进一步的分析\n}\n\nf(some_number = 123,some_string ='abc',some_missing_value = NA)\n#> [1] \"some_number\"        \"some_string\"        \"some_missing_value\"\n```\n:::\n\n\n### 5. 将省略号参数解压缩为本地函数变量（甚至是全局变量）\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\nf <- function(...) {\n  args <- list(...)\n  for( i in 1:length(args) ){ \n    assign( x = names(args)[i],value = args[[i]] )\n  }\n  ls()#显示可用的变量 #使用省略号参数作为当前变量进行进一步操作\n  \n  # 进一步的分析\n}\n\nf( some_number = 123,some_string =\"abc\")\n#> [1] \"args\"        \"i\"           \"some_number\" \"some_string\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n#> R version 4.2.1 (2022-06-23)\n#> Platform: aarch64-apple-darwin20 (64-bit)\n#> Running under: macOS Monterey 12.5.1\n#> \n#> Matrix products: default\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n#> \n#> locale:\n#> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] digest_0.6.29     jsonlite_1.8.0    magrittr_2.0.3    evaluate_0.16    \n#>  [5] rlang_1.0.4       stringi_1.7.8     cli_3.3.0         rstudioapi_0.14  \n#>  [9] rmarkdown_2.16.1  tools_4.2.1       stringr_1.4.1     htmlwidgets_1.5.4\n#> [13] xfun_0.32         yaml_2.3.5        fastmap_1.1.0     compiler_4.2.1   \n#> [17] htmltools_0.5.3   knitr_1.40\n```\n:::\n",
    "supporting": [
      "ellipsisParameter_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}