---
title: 1.7方案有偏好信息的多属性决策方法
date: '2019-02-26'
categories: uncertain
---



```{r setup, include=FALSE}
knitr::opts_chunk$set(message = F,warning = F,comment = "#>",collapse = TRUE)
```

## 徐泽水《不确定多属性决策方法与应用》27--37页
### 1.对方案的偏好信息为互反判断矩阵的情形
```{r}
## 1 对方案的偏好信息为互反判断矩阵的情形
library(data.table)
library(dplyr)
A = c(3.0,100,10,7,
      2.5,80,8,5,
      1.8,50,20,11,
      2.2,70,12,9)
A= matrix(A,nrow = 4,ncol = 4,byrow = T) %>% data.table()
A # 原始决策矩阵

#######################################################
##### 第一步把原始决策矩阵A 利用适当的方法进行规范化为R，R为归一化后的矩阵
##########################################################
### norm_matrix()函数，根据书中收益型属性（按公式1.2）与成本型属性(按公式1.4)分别进行归一化
# 参数A表示决策矩阵,shouyi参数代表收益型属性，输入收益型属性在决策矩阵中第几列，若有多列，用数值型向量即可，
# chengben参数代表成本型属性，与收益型属性类型。
# 该参数可任选其一输入，也可同时指定。
norm_matrix = function(A,shouyi=NULL,chengben=NULL){
  if(is.matrix(A))A = data.table(A)
  stopifnot(!is.null(shouyi) | !is.null(chengben))
  m = ncol(A)
  if(is.null(chengben)) chengben =setdiff(1:m,shouyi) 
  if(is.null(shouyi)) shouyi = setdiff(1:m,chengben)
  stopifnot(length(intersect(shouyi,chengben))==0,setequal(union(shouyi,chengben),1:m))
  #对决策矩阵进行重命名
  names(A)=paste0('V',1:m)
  shouyi = paste0("V",shouyi)
  chengben = paste0("V",chengben)
  R = A
  R[,':='(c(shouyi),lapply(.SD, function(x)x/max(x))),.SDcols =shouyi] # 收益型属性归一化 （书中1.2式）
  R[,':='(c(chengben),lapply(.SD,function(x)min(x)/x)),.SDcol = chengben]# 成本型属性归一化 （书中1.3式）
  R = as.data.frame(R)
  return(R)
}

R = norm_matrix(A,chengben = c(1,3))
round(R,3)
#########################################################
##### 第二步 根据决策方案(即决策矩阵的行)进行成对比较，构造出判断矩阵
#################################################
# 假设如下判断矩阵
H = c(1,2,1/4,1/5,
      1/2,1,1/2,1/3,
      4,2,1,1/2,
      5,3,2,1)
H = matrix(H, nrow = 4, ncol = 4, byrow = T)
H
Q = matrix(0,nrow = 4,ncol = 4)
for(k in 1:4) {
  for (l in 1:4) {
    for (i in 1:4) {
      for (j in 1:4) {
        Q[k, l] = Q[k, l] + (H[i, j] * R[i, k] - R[i, k]) * ((H[i, j] * R[i, l] - R[i, l]))
      }
    }
  }
}
Q
e_m = matrix(rep(1,4),nrow = 1)
t(e_m)

```
```{r}

(solve(Q) %*% t(e_m) )/as.vector(e_m %*% solve(Q) %*% t(e_m))
(solve(Q) %*% t(e_m) ) /0.2014189
```

### 2.对方案的偏好信息为模糊互补判断矩阵的情形
（待完善）

### 3.对方案的偏好信息为效用值的情形
（待完善）
